#pragma once

/**
 * @brief Функция для подсчета количества лестниц, которые можно построить из N кубиков.
 *
 * Функция использует рекурсию и возвращает количество возможных лестниц, которые можно построить из N кубиков.
 *
 * @param [in] N - общее количество кубиков для построения лестницы
 * @param [in] pastStep - количество кубиков на предыдущей ступени
 * @return Количество возможных лестниц, которые можно построить из N кубиков.
 */
int cubeStepsCounter(int N, int pastStep)
{
    // Проверка базового случая: если количество кубиков равно 0, считаем, что лестницу удалось построить
    if (N == 0)
        return 1;

    // Инициализация переменной для хранения количества возможных лестниц
    int stepsResult = 0;

    for (int i = 1; i < pastStep; i++)
    {
        // Оставшееся количество кубиков после построения текущей ступеньки
        int leftCubesStep = N - i;

        // Если оставшееся количество кубиков после построения текущей ступеньки меньше нуля, прерываем цикл
        if (leftCubesStep < 0)
            break;

        // Увеличиваем количество возможных лестниц на результат выполнения функции подсчета лестниц
        stepsResult += cubeStepsCounter(leftCubesStep, i);
    }

    // Возвращаем общее количество лестниц, которые удалось построить
    return stepsResult;
}
